// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Intmessage.proto

#include "Intmessage.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace a {
PROTOBUF_CONSTEXPR IntMessage::IntMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.number_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct IntMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR IntMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~IntMessageDefaultTypeInternal() {}
  union {
    IntMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 IntMessageDefaultTypeInternal _IntMessage_default_instance_;
PROTOBUF_CONSTEXPR voidMessage::voidMessage(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.num_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}
  , /*decltype(_impl_._oneof_case_)*/{}} {}
struct voidMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR voidMessageDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~voidMessageDefaultTypeInternal() {}
  union {
    voidMessage _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 voidMessageDefaultTypeInternal _voidMessage_default_instance_;
}  // namespace a
static ::_pb::Metadata file_level_metadata_Intmessage_2eproto[2];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Intmessage_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Intmessage_2eproto = nullptr;

const uint32_t TableStruct_Intmessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::a::IntMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::a::IntMessage, _impl_.number_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::a::voidMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::a::voidMessage, _impl_._oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  ::_pbi::kInvalidFieldOffsetTag,
  PROTOBUF_FIELD_OFFSET(::a::voidMessage, _impl_.num_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::a::IntMessage)},
  { 7, -1, -1, sizeof(::a::voidMessage)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::a::_IntMessage_default_instance_._instance,
  &::a::_voidMessage_default_instance_._instance,
};

const char descriptor_table_protodef_Intmessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020Intmessage.proto\022\001a\"\034\n\nIntMessage\022\016\n\006n"
  "umber\030\001 \001(\005\"R\n\013voidMessage\022\021\n\007int_num\030\001 "
  "\001(\005H\000\022\023\n\tfloat_num\030\002 \001(\002H\000\022\024\n\nstring_num"
  "\030\003 \001(\tH\000B\005\n\003numb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_Intmessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Intmessage_2eproto = {
    false, false, 143, descriptor_table_protodef_Intmessage_2eproto,
    "Intmessage.proto",
    &descriptor_table_Intmessage_2eproto_once, nullptr, 0, 2,
    schemas, file_default_instances, TableStruct_Intmessage_2eproto::offsets,
    file_level_metadata_Intmessage_2eproto, file_level_enum_descriptors_Intmessage_2eproto,
    file_level_service_descriptors_Intmessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Intmessage_2eproto_getter() {
  return &descriptor_table_Intmessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Intmessage_2eproto(&descriptor_table_Intmessage_2eproto);
namespace a {

// ===================================================================

class IntMessage::_Internal {
 public:
};

IntMessage::IntMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:a.IntMessage)
}
IntMessage::IntMessage(const IntMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  IntMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.number_ = from._impl_.number_;
  // @@protoc_insertion_point(copy_constructor:a.IntMessage)
}

inline void IntMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.number_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

IntMessage::~IntMessage() {
  // @@protoc_insertion_point(destructor:a.IntMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void IntMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void IntMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void IntMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:a.IntMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.number_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* IntMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 number = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.number_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* IntMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:a.IntMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 number = 1;
  if (this->_internal_number() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_number(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:a.IntMessage)
  return target;
}

size_t IntMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:a.IntMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 number = 1;
  if (this->_internal_number() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_number());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData IntMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    IntMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*IntMessage::GetClassData() const { return &_class_data_; }


void IntMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<IntMessage*>(&to_msg);
  auto& from = static_cast<const IntMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:a.IntMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_number() != 0) {
    _this->_internal_set_number(from._internal_number());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void IntMessage::CopyFrom(const IntMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:a.IntMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool IntMessage::IsInitialized() const {
  return true;
}

void IntMessage::InternalSwap(IntMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.number_, other->_impl_.number_);
}

::PROTOBUF_NAMESPACE_ID::Metadata IntMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Intmessage_2eproto_getter, &descriptor_table_Intmessage_2eproto_once,
      file_level_metadata_Intmessage_2eproto[0]);
}

// ===================================================================

class voidMessage::_Internal {
 public:
};

voidMessage::voidMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:a.voidMessage)
}
voidMessage::voidMessage(const voidMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  voidMessage* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  clear_has_num();
  switch (from.num_case()) {
    case kIntNum: {
      _this->_internal_set_int_num(from._internal_int_num());
      break;
    }
    case kFloatNum: {
      _this->_internal_set_float_num(from._internal_float_num());
      break;
    }
    case kStringNum: {
      _this->_internal_set_string_num(from._internal_string_num());
      break;
    }
    case NUM_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:a.voidMessage)
}

inline void voidMessage::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.num_){}
    , /*decltype(_impl_._cached_size_)*/{}
    , /*decltype(_impl_._oneof_case_)*/{}
  };
  clear_has_num();
}

voidMessage::~voidMessage() {
  // @@protoc_insertion_point(destructor:a.voidMessage)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void voidMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (has_num()) {
    clear_num();
  }
}

void voidMessage::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void voidMessage::clear_num() {
// @@protoc_insertion_point(one_of_clear_start:a.voidMessage)
  switch (num_case()) {
    case kIntNum: {
      // No need to clear
      break;
    }
    case kFloatNum: {
      // No need to clear
      break;
    }
    case kStringNum: {
      _impl_.num_.string_num_.Destroy();
      break;
    }
    case NUM_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = NUM_NOT_SET;
}


void voidMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:a.voidMessage)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_num();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* voidMessage::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 int_num = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _internal_set_int_num(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr));
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float float_num = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 21)) {
          _internal_set_float_num(::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr));
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // string string_num = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_string_num();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "a.voidMessage.string_num"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* voidMessage::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:a.voidMessage)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 int_num = 1;
  if (_internal_has_int_num()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_int_num(), target);
  }

  // float float_num = 2;
  if (_internal_has_float_num()) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(2, this->_internal_float_num(), target);
  }

  // string string_num = 3;
  if (_internal_has_string_num()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_string_num().data(), static_cast<int>(this->_internal_string_num().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "a.voidMessage.string_num");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_string_num(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:a.voidMessage)
  return target;
}

size_t voidMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:a.voidMessage)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (num_case()) {
    // int32 int_num = 1;
    case kIntNum: {
      total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_int_num());
      break;
    }
    // float float_num = 2;
    case kFloatNum: {
      total_size += 1 + 4;
      break;
    }
    // string string_num = 3;
    case kStringNum: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_string_num());
      break;
    }
    case NUM_NOT_SET: {
      break;
    }
  }
  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData voidMessage::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    voidMessage::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*voidMessage::GetClassData() const { return &_class_data_; }


void voidMessage::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<voidMessage*>(&to_msg);
  auto& from = static_cast<const voidMessage&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:a.voidMessage)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.num_case()) {
    case kIntNum: {
      _this->_internal_set_int_num(from._internal_int_num());
      break;
    }
    case kFloatNum: {
      _this->_internal_set_float_num(from._internal_float_num());
      break;
    }
    case kStringNum: {
      _this->_internal_set_string_num(from._internal_string_num());
      break;
    }
    case NUM_NOT_SET: {
      break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void voidMessage::CopyFrom(const voidMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:a.voidMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool voidMessage::IsInitialized() const {
  return true;
}

void voidMessage::InternalSwap(voidMessage* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.num_, other->_impl_.num_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata voidMessage::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Intmessage_2eproto_getter, &descriptor_table_Intmessage_2eproto_once,
      file_level_metadata_Intmessage_2eproto[1]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace a
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::a::IntMessage*
Arena::CreateMaybeMessage< ::a::IntMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::a::IntMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::a::voidMessage*
Arena::CreateMaybeMessage< ::a::voidMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::a::voidMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
